<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAO
        CQAAAk1TRnQBSQFMAgEBAgEAAXgBAAF4AQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEHIAAzABSwJiAWQB4wFiAmMB4AFiAmMB4AFiAmMB4AFiAmMB4AJiAWQB4wMw
        AUubAAEBPwABAQQAA2EB3AEQAdIC/wEAAcwC/wEAAZ8BxwH/AQABnwHHAf8BAAHMAv8BEAHSAv8DYQHc
        kAADEAEWA0wBkwODAfQDUgGkAx0BKiwAAxABFgNMAZMDgwH0A1IBpANDAXgBawF+AYAB8QEAAcwC/wEA
        AawB2AH/AQABrAHYAf8BAAHMAv8BaQF+AYAB8QM4AV2IAAMQARYDTAGTA4kB9gF/AX4BfwH4AVMCUgH/
        AXoCeQH8A4kB9gNbAcQDLQFGHAADEAEWA0wBkwOJAfYBfwF+AX8B+AFTAlIB/wF6AnkB/AOJAfYBiQKQ
        AfYBDQHSAv8BAAFXAXAB/wEAAVcBcAH/AQ0B0gL/A14B2QMAAQGAAAMQARYDTAGTA4kB9gF/AX4BfwH4
        A0QB/wMzAf8DMwH/AzMB/wM4Af8DhwH/A38B9ANfAd8DOgFiAwUBBwgAAxABFgNMAZMDiQH2AX8BfgF/
        AfgDRAH/AzMB/wMzAf8DMwH/AzgB/wGlAqYB/wGRAdAB4AH+AQABVwFwAf8BAAFXAXAB/wFnAXIBdgHu
        AyoBQYQAAaYCpQH5AX8BfgF/AfgDRAH/AzMB/wMzAf8DMwH/AzMB/wMzAf8DMwH/AzMB/wM0Af8DZQH/
        A3sB9AN+AfEDSAGDAxABFQGmAqUB+QF/AX4BfwH4A0QB/wMzAf8DMwH/AzMB/wMzAf8DMwH/AzMB/wMz
        Af8BwAHSAdYB/wETAaABvwH/ARMBoAG/Af8BtQG9Ab8B/ANIAYMDEAEVgAAB8QHvAfAB/wMzAf8DMwH/
        AzMB/wMzAf8DMwH/AzMB/wMzAf8DMwH/AzMB/wMzAf8DMwH/AzMB/wNSAf8DhgH3AaYCpQH5AfEB7wHw
        Af8DMwH/AzMB/wMzAf8DMwH/AzMB/wMzAf8DMwH/AzMB/wMzAf8DUwH/AcIB6AHyAf8BwgHoAfIB/wNt
        Af8DhgH3AaYCpQH5gAAB8QHvAfAB/wMzAf8DMwH/AzMB/wMzAf8DMwH/AzMB/wMzAf8DMwH/AzMB/wMz
        Af8DMwH/AzMB/wMzAf8DMwH/AfEB7wHwAf8B8QHvAfAB/wMzAf8DMwH/AzMB/wMzAf8DMwH/AzMB/wMz
        Af8DMwH/AzMB/wMzAf8DawH/A2sB/wMzAf8DMwH/AfEB7wHwAf+AAAHxAe8B8AH/AzMB/wMzAf8DMwH/
        AzMB/wM2Af8DRgH/AzMB/wMzAf8DMwH/AzMB/wMzAf8DMwH/AzMB/wMzAf8B8QHvAfAB/wHxAe8B8AH/
        AzMB/wMzAf8DMwH/AzMB/wM2Af8DRgH/AzMB/wMzAf8DMwH/AzMB/wMzAf8DMwH/AzMB/wMzAf8B8QHv
        AfAB/4AAAfEB7wHwAf8DMwH/AzMB/wM2Af8BhAKDAf8B2QHXAdgB/wHwAe4B7wH/AboBuQG6Af8BXQJc
        Af8DMwH/AzMB/wMzAf8DMwH/AzMB/wMzAf8B8QHvAfAB/wHxAe8B8AH/AzMB/wMzAf8DNgH/AYQCgwH/
        AdkB1wHYAf8B8AHuAe8B/wG6AbkBugH/AV0CXAH/AzMB/wMzAf8DMwH/AzMB/wMzAf8DMwH/AfEB7wHw
        Af+AAAHxAe8B8AH/AzMB/wNgAf8B2QHXAdgB/wHxAe8B8AH/AfEB7wHwAf8B8QHvAfAB/wHxAe8B8AH/
        AfEB7wHwAf8BzQHLAcwB/wFvAW4BbwH/AzYB/wMzAf8DMwH/AzMB/wHxAe8B8AH/AfEB7wHwAf8DMwH/
        A2AB/wHZAdcB2AH/AfEB7wHwAf8B8QHvAfAB/wHxAe8B8AH/AfEB7wHwAf8B8QHvAfAB/wHNAcsBzAH/
        AW8BbgFvAf8DNgH/AzMB/wMzAf8DMwH/AfEB7wHwAf+AAAGmAqUB+QOGAfcDUwH/AWoCaQH/AccBxgHH
        Af8B8QHvAfAB/wHxAe8B8AH/AfEB7wHwAf8B8QHvAfAB/wHxAe8B8AH/AfEB7wHwAf8B3QHbAdwB/wGQ
        Ao8B/wM8Af8DMwH/AfEB7wHwAf8BpgKlAfkDhgH3A1MB/wFqAmkB/wHHAcYBxwH/AfEB7wHwAf8B8QHv
        AfAB/wHxAe8B8AH/AfEB7wHwAf8B8QHvAfAB/wHxAe8B8AH/Ad0B2wHcAf8BkAKPAf8DPAH/AzMB/wHx
        Ae8B8AH/gAADEAEVA0gBgwN+AfEDewH0A2UB/wNYAf8BtQK0Af8B7gHsAe0B/wHxAe8B8AH/AfEB7wHw
        Af8B8QHvAfAB/wHnAeUB5gH/AZoCmQH/A04B/wF/AX4BfwH4AaYCpQH5AxABFQNIAYMDfgHxA3sB9ANl
        Af8DWAH/AbUCtAH/Ae4B7AHtAf8B8QHvAfAB/wHxAe8B8AH/AfEB7wHwAf8B5wHlAeYB/wGaApkB/wNO
        Af8BfwF+AX8B+AGmAqUB+YgAAwUBBwM6AWIDXwHfA38B9AOHAf8DTAH/AaMBogGjAf8B3QHbAdwB/wGa
        ApkB/wNOAf8BfwF+AX8B+AOJAfYDTAGTAxABFggAAwUBBwM6AWIDXwHfA38B9AOHAf8DTAH/AaMBogGj
        Af8B3QHbAdwB/wGaApkB/wNOAf8BfwF+AX8B+AOJAfYDTAGTAxABFpQAAy0BRgNbAcMDiQH2AXoCeQH8
        AVMCUgH/AX8BfgF/AfgDiQH2A0wBkwMQARYcAAMtAUYDWwHDA4kB9gF6AnkB/AFTAlIB/wF/AX4BfwH4
        A4kB9gNMAZMDEAEWpAADHQEqA1IBpAODAfQDTAGTAxABFiwAAx0BKgNSAaQDgwH0A0wBkwMQARaQAAFC
        AU0BPgcAAT4DAAEoAwABQAMAARADAAEBAQABAQUAAYAXAAP/AQAD/wUAAf0B/wH9BQAB8AF/AfAFAAHA
        AR8BwAYAAQMBAAEBRAABwAEAAcAFAAH4AQMB+AEDBAAB/gEPAf4BDwQACw==
</value>
  </data>
</root>